
Fatbin elf code:
================
arch = sm_52
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin elf code:
================
arch = sm_52
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_52
code version = [7,5]
producer = <unknown>
host = linux
compile_size = 64bit
compressed








.version 7.5
.target sm_52
.address_size 64



.visible .entry _Z11mvt_kernel1iPfS_S_(
.param .u32 _Z11mvt_kernel1iPfS_S__param_0,
.param .u64 _Z11mvt_kernel1iPfS_S__param_1,
.param .u64 _Z11mvt_kernel1iPfS_S__param_2,
.param .u64 _Z11mvt_kernel1iPfS_S__param_3
)
{
.reg .pred %p<8>;
.reg .f32 %f<22>;
.reg .b32 %r<26>;
.reg .b64 %rd<27>;


ld.param.u32 %r11, [_Z11mvt_kernel1iPfS_S__param_0];
ld.param.u64 %rd16, [_Z11mvt_kernel1iPfS_S__param_1];
ld.param.u64 %rd15, [_Z11mvt_kernel1iPfS_S__param_2];
ld.param.u64 %rd17, [_Z11mvt_kernel1iPfS_S__param_3];
cvta.to.global.u64 %rd1, %rd17;
cvta.to.global.u64 %rd2, %rd16;
mov.u32 %r12, %ntid.x;
mov.u32 %r13, %ctaid.x;
mov.u32 %r14, %tid.x;
mad.lo.s32 %r1, %r13, %r12, %r14;
setp.ge.s32 %p1, %r1, %r11;
setp.lt.s32 %p2, %r11, 1;
or.pred %p3, %p1, %p2;
@%p3 bra $L__BB0_7;

cvta.to.global.u64 %rd18, %rd15;
mul.wide.s32 %rd19, %r1, 4;
add.s64 %rd3, %rd18, %rd19;
and.b32 %r25, %r11, 3;
add.s32 %r16, %r11, -1;
setp.lt.u32 %p4, %r16, 3;
mov.u32 %r24, 0;
@%p4 bra $L__BB0_4;

sub.s32 %r23, %r11, %r25;
ld.global.f32 %f20, [%rd3];
shl.b32 %r18, %r1, 12;
or.b32 %r19, %r18, 2;
mul.wide.s32 %rd20, %r19, 4;
add.s64 %rd24, %rd2, %rd20;
mov.u64 %rd23, %rd1;

$L__BB0_3:
ld.global.f32 %f7, [%rd23];
ld.global.f32 %f8, [%rd24+-8];
fma.rn.f32 %f9, %f8, %f7, %f20;
st.global.f32 [%rd3], %f9;
ld.global.f32 %f10, [%rd23+4];
ld.global.f32 %f11, [%rd24+-4];
fma.rn.f32 %f12, %f11, %f10, %f9;
st.global.f32 [%rd3], %f12;
ld.global.f32 %f13, [%rd23+8];
ld.global.f32 %f14, [%rd24];
fma.rn.f32 %f15, %f14, %f13, %f12;
st.global.f32 [%rd3], %f15;
ld.global.f32 %f16, [%rd23+12];
ld.global.f32 %f17, [%rd24+4];
fma.rn.f32 %f20, %f17, %f16, %f15;
st.global.f32 [%rd3], %f20;
add.s32 %r24, %r24, 4;
add.s64 %rd24, %rd24, 16;
add.s64 %rd23, %rd23, 16;
add.s32 %r23, %r23, -4;
setp.ne.s32 %p5, %r23, 0;
@%p5 bra $L__BB0_3;

$L__BB0_4:
setp.eq.s32 %p6, %r25, 0;
@%p6 bra $L__BB0_7;

ld.global.f32 %f21, [%rd3];
mul.wide.s32 %rd21, %r24, 4;
add.s64 %rd26, %rd1, %rd21;
shl.b32 %r20, %r1, 12;
add.s32 %r21, %r24, %r20;
mul.wide.s32 %rd22, %r21, 4;
add.s64 %rd25, %rd2, %rd22;

$L__BB0_6:
.pragma "nounroll";
ld.global.f32 %f18, [%rd26];
ld.global.f32 %f19, [%rd25];
fma.rn.f32 %f21, %f19, %f18, %f21;
st.global.f32 [%rd3], %f21;
add.s64 %rd26, %rd26, 4;
add.s64 %rd25, %rd25, 4;
add.s32 %r25, %r25, -1;
setp.ne.s32 %p7, %r25, 0;
@%p7 bra $L__BB0_6;

$L__BB0_7:
ret;

}

.visible .entry _Z11mvt_kernel2iPfS_S_(
.param .u32 _Z11mvt_kernel2iPfS_S__param_0,
.param .u64 _Z11mvt_kernel2iPfS_S__param_1,
.param .u64 _Z11mvt_kernel2iPfS_S__param_2,
.param .u64 _Z11mvt_kernel2iPfS_S__param_3
)
{
.reg .pred %p<8>;
.reg .f32 %f<22>;
.reg .b32 %r<25>;
.reg .b64 %rd<27>;


ld.param.u32 %r11, [_Z11mvt_kernel2iPfS_S__param_0];
ld.param.u64 %rd16, [_Z11mvt_kernel2iPfS_S__param_1];
ld.param.u64 %rd15, [_Z11mvt_kernel2iPfS_S__param_2];
ld.param.u64 %rd17, [_Z11mvt_kernel2iPfS_S__param_3];
cvta.to.global.u64 %rd1, %rd17;
cvta.to.global.u64 %rd2, %rd16;
mov.u32 %r12, %ntid.x;
mov.u32 %r13, %ctaid.x;
mov.u32 %r14, %tid.x;
mad.lo.s32 %r1, %r13, %r12, %r14;
setp.ge.s32 %p1, %r1, %r11;
setp.lt.s32 %p2, %r11, 1;
or.pred %p3, %p1, %p2;
@%p3 bra $L__BB1_7;

cvta.to.global.u64 %rd18, %rd15;
mul.wide.s32 %rd19, %r1, 4;
add.s64 %rd3, %rd18, %rd19;
and.b32 %r24, %r11, 3;
add.s32 %r16, %r11, -1;
setp.lt.u32 %p4, %r16, 3;
mov.u32 %r23, 0;
@%p4 bra $L__BB1_4;

sub.s32 %r22, %r11, %r24;
ld.global.f32 %f20, [%rd3];
add.s32 %r18, %r1, 8192;
mul.wide.s32 %rd20, %r18, 4;
add.s64 %rd23, %rd2, %rd20;
mov.u64 %rd24, %rd1;

$L__BB1_3:
ld.global.f32 %f7, [%rd24];
ld.global.f32 %f8, [%rd23+-32768];
fma.rn.f32 %f9, %f8, %f7, %f20;
st.global.f32 [%rd3], %f9;
ld.global.f32 %f10, [%rd24+4];
ld.global.f32 %f11, [%rd23+-16384];
fma.rn.f32 %f12, %f11, %f10, %f9;
st.global.f32 [%rd3], %f12;
ld.global.f32 %f13, [%rd24+8];
ld.global.f32 %f14, [%rd23];
fma.rn.f32 %f15, %f14, %f13, %f12;
st.global.f32 [%rd3], %f15;
ld.global.f32 %f16, [%rd24+12];
ld.global.f32 %f17, [%rd23+16384];
fma.rn.f32 %f20, %f17, %f16, %f15;
st.global.f32 [%rd3], %f20;
add.s32 %r23, %r23, 4;
add.s64 %rd24, %rd24, 16;
add.s64 %rd23, %rd23, 65536;
add.s32 %r22, %r22, -4;
setp.ne.s32 %p5, %r22, 0;
@%p5 bra $L__BB1_3;

$L__BB1_4:
setp.eq.s32 %p6, %r24, 0;
@%p6 bra $L__BB1_7;

ld.global.f32 %f21, [%rd3];
mul.wide.s32 %rd21, %r23, 4;
add.s64 %rd26, %rd1, %rd21;
shl.b32 %r19, %r23, 12;
add.s32 %r20, %r1, %r19;
mul.wide.s32 %rd22, %r20, 4;
add.s64 %rd25, %rd2, %rd22;

$L__BB1_6:
.pragma "nounroll";
ld.global.f32 %f18, [%rd26];
ld.global.f32 %f19, [%rd25];
fma.rn.f32 %f21, %f19, %f18, %f21;
st.global.f32 [%rd3], %f21;
add.s64 %rd26, %rd26, 4;
add.s64 %rd25, %rd25, 16384;
add.s32 %r24, %r24, -1;
setp.ne.s32 %p7, %r24, 0;
@%p7 bra $L__BB1_6;

$L__BB1_7:
ret;

}

