
Fatbin elf code:
================
arch = sm_52
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin elf code:
================
arch = sm_52
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_52
code version = [7,5]
producer = <unknown>
host = linux
compile_size = 64bit
compressed








.version 7.5
.target sm_52
.address_size 64



.visible .entry _Z11syrk_kerneliiffPfS_(
.param .u32 _Z11syrk_kerneliiffPfS__param_0,
.param .u32 _Z11syrk_kerneliiffPfS__param_1,
.param .f32 _Z11syrk_kerneliiffPfS__param_2,
.param .f32 _Z11syrk_kerneliiffPfS__param_3,
.param .u64 _Z11syrk_kerneliiffPfS__param_4,
.param .u64 _Z11syrk_kerneliiffPfS__param_5
)
{
.reg .pred %p<9>;
.reg .f32 %f<31>;
.reg .b32 %r<43>;
.reg .b64 %rd<37>;


ld.param.u32 %r18, [_Z11syrk_kerneliiffPfS__param_0];
ld.param.u32 %r17, [_Z11syrk_kerneliiffPfS__param_1];
ld.param.f32 %f7, [_Z11syrk_kerneliiffPfS__param_2];
ld.param.f32 %f8, [_Z11syrk_kerneliiffPfS__param_3];
ld.param.u64 %rd22, [_Z11syrk_kerneliiffPfS__param_4];
ld.param.u64 %rd21, [_Z11syrk_kerneliiffPfS__param_5];
cvta.to.global.u64 %rd1, %rd22;
mov.u32 %r19, %ntid.x;
mov.u32 %r20, %ctaid.x;
mul.lo.s32 %r1, %r20, %r19;
mov.u32 %r2, %tid.x;
add.s32 %r3, %r1, %r2;
mov.u32 %r21, %ntid.y;
mov.u32 %r22, %ctaid.y;
mul.lo.s32 %r4, %r22, %r21;
mov.u32 %r5, %tid.y;
add.s32 %r6, %r4, %r5;
setp.ge.s32 %p1, %r6, %r18;
setp.ge.s32 %p2, %r3, %r18;
or.pred %p3, %p1, %p2;
@%p3 bra $L__BB0_8;

cvta.to.global.u64 %rd23, %rd21;
shl.b32 %r7, %r6, 10;
add.s32 %r23, %r7, %r3;
mul.wide.s32 %rd24, %r23, 4;
add.s64 %rd2, %rd23, %rd24;
ld.global.f32 %f9, [%rd2];
mul.f32 %f29, %f9, %f8;
st.global.f32 [%rd2], %f29;
setp.lt.s32 %p4, %r17, 1;
@%p4 bra $L__BB0_8;

add.s32 %r25, %r17, -1;
and.b32 %r42, %r17, 3;
setp.lt.u32 %p5, %r25, 3;
mov.u32 %r41, 0;
@%p5 bra $L__BB0_5;

sub.s32 %r40, %r17, %r42;
shl.b32 %r27, %r3, 10;
mul.wide.s32 %rd25, %r27, 4;
add.s64 %rd34, %rd1, %rd25;
shl.b32 %r28, %r2, 10;
shl.b32 %r29, %r1, 10;
add.s32 %r30, %r29, %r28;
or.b32 %r31, %r30, 2;
mul.wide.s32 %rd26, %r31, 4;
add.s64 %rd33, %rd1, %rd26;
shl.b32 %r32, %r5, 10;
shl.b32 %r33, %r4, 10;
add.s32 %r34, %r33, %r32;
or.b32 %r35, %r34, 2;
mul.wide.s32 %rd27, %r35, 4;
add.s64 %rd32, %rd1, %rd27;
mul.wide.s32 %rd28, %r7, 4;
add.s64 %rd31, %rd1, %rd28;

$L__BB0_4:
ld.global.f32 %f10, [%rd31];
mul.f32 %f11, %f10, %f7;
ld.global.f32 %f12, [%rd34];
fma.rn.f32 %f13, %f11, %f12, %f29;
st.global.f32 [%rd2], %f13;
ld.global.f32 %f14, [%rd32+-4];
mul.f32 %f15, %f14, %f7;
ld.global.f32 %f16, [%rd33+-4];
fma.rn.f32 %f17, %f15, %f16, %f13;
st.global.f32 [%rd2], %f17;
ld.global.f32 %f18, [%rd32];
mul.f32 %f19, %f18, %f7;
ld.global.f32 %f20, [%rd33];
fma.rn.f32 %f21, %f19, %f20, %f17;
st.global.f32 [%rd2], %f21;
ld.global.f32 %f22, [%rd32+4];
mul.f32 %f23, %f22, %f7;
ld.global.f32 %f24, [%rd33+4];
fma.rn.f32 %f29, %f23, %f24, %f21;
st.global.f32 [%rd2], %f29;
add.s32 %r41, %r41, 4;
add.s64 %rd34, %rd34, 16;
add.s64 %rd33, %rd33, 16;
add.s64 %rd32, %rd32, 16;
add.s64 %rd31, %rd31, 16;
add.s32 %r40, %r40, -4;
setp.ne.s32 %p6, %r40, 0;
@%p6 bra $L__BB0_4;

$L__BB0_5:
setp.eq.s32 %p7, %r42, 0;
@%p7 bra $L__BB0_8;

shl.b32 %r36, %r3, 10;
add.s32 %r37, %r41, %r36;
mul.wide.s32 %rd29, %r37, 4;
add.s64 %rd36, %rd1, %rd29;
add.s32 %r38, %r41, %r7;
mul.wide.s32 %rd30, %r38, 4;
add.s64 %rd35, %rd1, %rd30;

$L__BB0_7:
.pragma "nounroll";
ld.global.f32 %f25, [%rd35];
mul.f32 %f26, %f25, %f7;
ld.global.f32 %f27, [%rd36];
fma.rn.f32 %f29, %f26, %f27, %f29;
st.global.f32 [%rd2], %f29;
add.s64 %rd36, %rd36, 4;
add.s64 %rd35, %rd35, 4;
add.s32 %r42, %r42, -1;
setp.ne.s32 %p8, %r42, 0;
@%p8 bra $L__BB0_7;

$L__BB0_8:
ret;

}

